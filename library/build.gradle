plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlinx-serialization'
    id "com.google.protobuf" version '0.9.0'
}

ext {
    PUBLISH_GROUP_ID = rootProject.groupId
    PUBLISH_VERSION = rootProject.versionName
    PUBLISH_ARTIFACT_ID = rootProject.artifactIdLibrary
}
apply from: "${rootProject.projectDir}/scripts/publish-mavencentral.gradle"

android {
    compileSdkVersion rootProject.compileSdk

    defaultConfig {
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    signingConfigs {
        releaseConfig {
            storeFile file("../app/zebra_print_library_sample_key.jks")
            storePassword("zebraprint")
            keyAlias "Dadino"
            keyPassword "zebraprint"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.releaseConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            matchingFallbacks = ['release']
        }
        debug {
            initWith(release)
            minifyEnabled false
            matchingFallbacks = ['debug']
        }
    }


    kotlin {
        jvmToolchain(17)
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/*', 'META-INF/**/*']
        }
        resources {
            excludes += ['META-INF/*', 'META-INF/**/*']
        }
    }

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:3.19.4"
        }

        // Generates the java Protobuf-lite code for the Protobufs in this project. See
        // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
        // for more information.
        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    java {
                        option 'lite'
                    }
                }
            }
        }
    }
    namespace 'com.dadino.zebraprint.library'
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    //Kotlin
    api('org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2')

    //Test
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.3")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.4.0")

    //AndroidX
    implementation("androidx.core:core-ktx:1.13.1")
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("androidx.preference:preference-ktx:1.2.1")
    implementation("com.google.android.material:material:1.11.0")

    //Data Store
    api("com.google.protobuf:protobuf-javalite:3.21.11")
    api("androidx.datastore:datastore:1.1.1")

    //Timber
    implementation('com.jakewharton.timber:timber:4.7.1')

    //Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")

    //Quickstart
    api("io.github.dadino.quickstart3:contextformattable:0.13.4")
}